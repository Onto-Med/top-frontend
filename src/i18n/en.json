{
  "ageRestriction": "Age restriction|Age restrictions",
  "ageRestrictionDescription": "Set one or more age restrictions for this phenotype. Values are in years.",
  "aggregationFunction": "Aggregation function|Aggregation functions",
  "aggregationFunctionDescription": "This is a composite phenotype, which means that a default aggregation function is required for cases where no function is explicitly given in the expression of a phenotype. Aggregation functions are needed to aggregate multiple phenotype values to one value and to be able to use it for calculations.",
  "and": "and",
  "asc": "Ascending",
  "back": "Back",
  "buildQuery": "Build query|Build queries",
  "buildQueryFor": "Build query for|Build queries for",
  "cardinality": "Cardinality|Cardinalities",
  "category": "Category|Categories",
  "change": "Change",
  "clearThing": "Clear {thing}",
  "closure": "Closure|Closures",
  "copyFailed": "The content could not be copied.",
  "copyToClipboard": "Copy to clipboard.",
  "count": "Count|Counts",
  "thingCreatedOrUpdated": "{thing} created or updated.",
  "ctrl": "CTRL",
  "dataSource": "Data source|Data sources",
  "dataSourceDescription": "Select a data source on which the query shall be executed.",
  "dateTimeRestriction": "Time restriction|Time restrictions",
  "dateTimeRestrictionDescription": "Restrict the time range, when this phenotype must have been observed.",
  "defaultValue": "Default value|Default values",
  "defaultValueHint": "If none of the mappings match.",
  "desc": "Descending",
  "duplicate": "Duplicate",
  "elapsedTime": "Elapsed time",
  "eligibilityCriterion": "Eligibility criterion|Eligibility criteria",
  "eligibilityCriterionSelection": "Click on phenotypes in the left tree to add them to the criteria list.",
  "entityIsForkDescription": "This entity has been forked from an entity in another repository.",
  "exclusion": "Exclusion|Exclusions",
  "execute": "Execute",
  "export": "Export",
  "exportDescription": "Select a format in which you want to create an export for the selected content.",
  "forkEntityToRepository": "Do you want to transfer {entity} to the repository {repository}?",
  "format": "Format|Formats",
  "function": "Function",
  "functions": {
    "CutFirst": "CutFirst",
    "CutLast": "CutLast",
    "If": "If",
    "Sum": "Sum",
    "Last": "Last",
    "First": "First",
    "Or": "Or",
    "PlusDays": "+Days",
    "DiffYears": "ΔYears",
    "In": "In",
    "Not": "Not",
    "Min": "Min",
    "PlusYears": "+Years",
    "Empty": "Empty",
    "Entity": "Entity",
    "Max": "Max",
    "Median": "Median",
    "MinTrue": "Min #true",
    "DiffDays": "ΔDays",
    "Date": "Date",
    "Count": "Count",
    "DiffMonths": "ΔMonths",
    "PlusMonths": "+Months",
    "Constant": "Constant",
    "Avg": "Avg",
    "And": "And",
    "Ne": "≠",
    "Eq": "=",
    "Multiply": "×",
    "Le": "≤",
    "Ge": "≥",
    "Lt": "<",
    "Gt": ">",
    "Divide": "/",
    "Add": "+",
    "Substract": "-",
    "Power": "^",
    "Li": "List",
    "Filter": "Filter",
    "Switch": "Switch",
    "Exists": "Exists",
    "EndsBefore": "EndsBefore",
    "StartsBefore": "StartsBefore",
    "TimeDistance": "TimeDistance",
    "Overlap1": "Overlap1",
    "Overlap2": "Overlap2",
    "Vals": "Values",
    "Union": "Union",
    "EncAge": "Encounter age",
    "EncType": "Encounter type"
  },
  "import": "Import",
  "includeThing": "Include {thing}",
  "inclusion": "Inclusion|Inclusions",
  "loadThing": "Load {thing}",
  "mapping": "Mapping|Mappings",
  "maximum": "Maximum",
  "minimum": "Minimum",
  "nothingSelectedYet": "Nothing has been selected yet.",
  "performThing": "Perform {thing}",
  "pleaseModifySettings": "Please modify the settings",
  "output": "Output|Outputs",
  "outputSelection": "Right-click on phenotypes in the left tree to add them to the output.",
  "query": "Query|Queries",
  "queryExecuteDescription": "Execute this query now and show the result set.",
  "queryExportDescription": "Save this query to be able to use it again later.",
  "queryImportDescription": "Alternatively, you can re-import a previously exported query using the form below.",
  "queryImportFile": "Select query file",
  "queryName": "Query name|Query names",
  "queryResult": "Query result|Query results",
  "removeThing": "Remove {thing}",
  "resultSet": "Result set|Result sets",
  "running": "Running",
  "selection": "Selection|Selections",
  "superCategory": "Super category|Super categories",
  "thingIsInvalid": "{thing} is invalid",
  "updateExistingThing": "Update existing {thing}",
  "origin": "Origin|Origins",
  "unnamedQuery": "Unnamed query|Unnamed queries",
  "missing_value": "Missing value|Missing values",
  "phenotype": "Phenotype|Phenotypes",
  "phenotype_group": "Phenotype group|Phenotype groups",
  "single_phenotype": "Single phenotype|Single phenotypes",
  "composite_phenotype": "Composite phenotype|Composite phenotypes",
  "single_restriction": "Single restriction|Single restrictions",
  "composite_restriction": "Composite restriction|Composite restrictions",
  "id": "ID",
  "account": "Account",
  "dataType": "Data Type|Data Types",
  "number": "Number|Numbers",
  "darkMode": "Dark mode",
  "date": "Date|Dates",
  "date_time": "Date and Time|Dates and Times",
  "timestamp": "Timestamp",
  "string": "Text|Texts",
  "title": "Title|Titles",
  "synonym": "Synonym|Synonyms",
  "description": "Description|Descriptions",
  "ok": "OK",
  "cancel": "Cancel",
  "entry": "Entry|Entries",
  "addThing": "Add {thing}",
  "oneThingPerThing": "There can only exist one {thing1} per {thing2}!",
  "language": "Language|Languages",
  "allLanguages": "any Language|all Languages",
  "lightMode": "Light mode",
  "remove": "Remove",
  "delete": "Delete",
  "score": "Score|Scores",
  "component": "Component",
  "restriction": "Restriction|Restrictions",
  "expression": "Expression",
  "class": "Class",
  "union": "Union",
  "intersection": "Intersection",
  "expand": "Expand",
  "clearAll": "Clear all",
  "show": "Show",
  "filter": "Filter",
  "operator": "Operator",
  "setting": "Setting|Settings",
  "indentWithSpaces": "Indent with spaces",
  "confirmClearExpression": "Please confirm that you want to delete the current expression.",
  "confirmDiscardChanges": "Please confirm that you want to discard the current changes.",
  "selectThing": "Select {thing}",
  "save": "Save",
  "reset": "Reset",
  "entity": "Entity|Entities",
  "value": "Value|Values",
  "enumeration": "Enumeration|Enumerations",
  "valueRange": "Value range|Value ranges",
  "pleaseWait": "Please wait",
  "primary": "Public",
  "primaryRepositoryDescription": "Public repositories are readable by everyone. Their content can be forked into private repositories and they support pull requests.",
  "reload": "Reload",
  "dismiss": "Dismiss",
  "notFound": "Not found",
  "quantifier": "Quantifier|Quantifiers",
  "loading": "Loading",
  "logOut": "Log out",
  "logIn": "Log in",
  "unnamedCategory": "Unnamed category",
  "unnamedPhenotype": "Unnamed phenotype",
  "unnamedRestriction": "Unnamed restriction",
  "backToCurrentVersion": "Back to current version",
  "showThing": "Show {thing}",
  "createThing": "Create {thing}",
  "thingCreated": "{thing} has been created",
  "thingSaved": "{thing} has been saved",
  "deleteThing": "Delete {thing}",
  "thingDeleted": "{thing} has been deleted",
  "editThing": "Edit {thing}",
  "help": "Help",
  "version": "Version|Versions",
  "versionHistory": "Version history|Version histories",
  "noDataPresent": "No data present",
  "close": "Close",
  "author": "Author",
  "restore": "Restore",
  "thingRestored": "{thing} has been restored",
  "current": "Current",
  "invalid": "Invalid",
  "valid": "Valid",
  "unit": "Unit|Units",
  "repository": "Repository|Repositories",
  "organisation": "Organisation|Organisations",
  "superOrganisation": "Super organisation|Super organisations",
  "formula": "Formula|Formulas",
  "closeAll": "Close all",
  "closeOthers": "Close others",
  "closeSaved": "Close saved",
  "code": "Code|Codes",
  "base": "Base|Bases",
  "search": "Search",
  "searchThing": "Search {thing}",
  "home": "Home",
  "createdAt": "Created at {date}",
  "name": "Name",
  "notSavedYet": "Not saved yet!",
  "unsavedChanges": "Unsaved changes",
  "encloseWithExpression": "Enclose with expression",
  "displayingOtherVersion": "You are shown a version other than the current one.",
  "pleaseCheckInput": "Please check your input!",
  "versionRestoreDescription": "This will reset the entity to the displayed status.",
  "mandatoryListField": "At least one entry is required!",
  "constant": "Constant",
  "more": "More",
  "new": "New",
  "addMoreArguments": "Add more arguments",
  "sourceCode": "Source code",
  "fork": "Fork|Forks",
  "forkingState": "Forking status",
  "forkToCurrentRepository": "Fork entity into current repository.",
  "entityEditor": {
    "rawBtn": {
      "label": "Show entity data as JSON"
    },
    "rawDialog": {
      "content": "Current state of the entity"
    },
    "titlesHelp": "You can enter exactly one title per language. The titles should be short and comprehensible. When displaying an entity, the title appropriate for the current language setting is selected. If no suitable title is specified for the language setting, the first entry in the list is used.",
    "synonymsHelp": "Synonyms are alternative names for entities. For example, the phenotype \"BMI\" could have the synonym \"Body Mass Index\".",
    "descriptionsHelp": "Here you can specify further descriptions or definitions of the entity in different languages.",
    "codesHelp": "In this section, specify links to taxonomies (e.g. SNOMED CT) so that the phenotype is mapped to the standards and can be linked to other IT systems. In this way, on the one hand, data from other sources can be read in and used for phenotyping. On the other hand, results can be fed back to external IT systems. Just type in a code or code title to start the search. You can optionally filter by code system.",
    "formulaHelp": "Mathematical and Boolean formulas can be entered here to calculate the values of the phenotype. Formulas can contain other phenotypes as well as constants.",
    "textFormulaHelp": "Concepts can be connected here via Boolean variables or fuzzy matching defined.",
    "restrictionHelp": "Specify the restrictions to be applied to values of the phenotype. To do this, please first select a suitable quantifier. Then you have to choose between value range (with minimum and/or maximum) or enumeration (any number of predefined values) for the type of restriction. No restriction type can be selected for the quantifiers \"Values present\" and \"No values present\" because the restriction of the values is implicit.",
    "emptyTab": {
      "tree": {
        "selection": "Select one or more entities in the tree on the left side.",
        "actions": "Right-click to create new entities or delete existing ones."
      },
      "tab": {
        "description": "The properties of the selected entities are displayed here."
      }
    },
    "delete": {
      "confirm": "Do you really want to delete the entity irrevocably? All saved versions and restrictions will also be deleted.",
      "cascade": "Delete contained entities as well."
    }
  },
  "organisationPage": {
    "description": "The content of the {productName} is structured into organisations. Bundle models into an organisation if you want them to have the same access rights. You can invite other users to your organisations by giving them read, write, or manage rights. All available organisations are listed below. The icons on the left indicate your access rights.",
    "confirmDelete": "Do you really want to delete this organisation?"
  },
  "repositoryPage": {
    "confirmDelete": "Do you really want to delete this repository?"
  },
  "entityTree": {
    "noNodesLabel": "There are no entities.",
    "noResultsLabel": "The filtering has no results."
  },
  "entitySearchInput": {
    "description": "Enter at least {minLength} characters to search for matching {types}.",
    "emptyResult": "No matching {types} could be found."
  },
  "ucumCard": {
    "help": "Enter a unit or a unit designation. A list of suggestions will then be displayed from which you can select the appropriate UCUM unit."
  },
  "quantifierType": {
    "all": "All values in range",
    "exact": "Exactly X values in range",
    "min": "At least X values in range",
    "max": "No more than X values in range"
  },
  "copy": "Copy",
  "restrictionOf": "Restriction of",
  "inUnit": "in {unit}",
  "outputEntry": "Output entry|Output entries",
  "addAsThing": "Add as {thing}",
  "incomplete": "Incomplete",
  "failed": "Failed",
  "finished": "Finished",
  "entityType": "Entity type|Entity types",
  "documentation": "Documentation|Documentations",
  "document": "Document|Documents",
  "documentPage": {},
  "concept": "Concept|Concepts",
  "details": "Details",
  "inputRequired": "Input required",
  "repositorySearchInput": {
    "emptyResult": "No result|No results"
  },
  "repositoryType": "Repository type|Repository types",
  "documentSearch": {
    "title": "Document search",
    "description": "Please select the type of the document representation.",
    "short": "Explorative document search"
  },
  "phenotype_repository": "Phenotype repository",
  "concept_repository": "Concept repository",
  "exclusive": "Exclusive",
  "resultCount": "No results|{n} result|{n} results",
  "selectionMode": "Selection mode",
  "itemType": {
    "title": "Item type|Item types",
    "description": "Item types are used to further describe a phenotype and its assignment to an individual. They can only be defined for single phenotypes, as these phenotypes are directly linked to the underlying data elements. Depending on the data source, data retrieval can differ dramatically between item types."
  },
  "itemTypes": {
    "allergy_intolerance": "Allergy intolerance|Allergy intolerances",
    "clinical_impression": "Clinical impression|Clinical impressions",
    "condition": "Condition|Conditions",
    "encounter": "Encounter",
    "medication": "Medication",
    "medication_administration": "Medication administration|Medication administrations",
    "medication_request": "Medication request|Medication requests",
    "medication_statement": "Medication statement|Medication statements",
    "observation": "Observation|Observations",
    "procedure": "Procedure|Procedures",
    "subject_age": "Age of the subject",
    "subject_birth_date": "Birth date of the subject",
    "subject_sex": "Sex of the subject"
  },
  "itemTypeDescriptions": {
    "allergy_intolerance": "A record of a clinical assessment of an allergy or intolerance.",
    "clinical_impression": "A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments that is best to manage a patient's condition.",
    "condition": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.",
    "medication_administration": "Describes the event of an individual consuming or otherwise being administered a medication.",
    "medication_request": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient.",
    "medication_statement": "A record of a medication that is being consumed by an individual.",
    "observation": "Measurements and simple assertions made about an individual.",
    "procedure": "An action that is or was performed on or for an individual. This can be a physical intervention, counselling, or other services.",
    "subject_age": "The phenotype class for the age of a subject may require special handling when accessing data sources and must therefore be marked separately.",
    "subject_birth_date": "The phenotype class for the birth date of a subject may require special handling when accessing data sources and must therefore be marked separately.",
    "subject_sex": "The phenotype class for the sex of a subject may require special handling when accessing data sources and must therefore be marked separately."
  },
  "unnamedEntity": "Unnamed entity|Unnamed entities",
  "copiedToClipboard": "Copied to clipboard",
  "saveAsFile": "Save as file",
  "importAndExport": "Import and export",
  "importOrExportThing": "Import or export {thing}",
  "importDescription": "Select a file and the respective format to upload it's content to the this repository.",
  "importFormat": "Import format|Import formats",
  "exportFormat": "Export format|Export formats",
  "importFinished": "Import finished",
  "repositoryImportFile": "Repository import file|Repository import files",
  "functionType": {
    "bool": "Boolean functions",
    "arithmetic": "Arithmetic",
    "aggregate": "Aggregations",
    "advanced": "Advanced functions",
    "comparison": "Comparison functions",
    "date_time": "Date and time functions",
    "encounter": "Encouter related functions",
    "component": "Components",
    "none": "Unspecified functions",
    "set": "Set functions",
    "textFunction": "Text functions"
  },
  "confirmChangeExpressionType": "If you change the expression type, any data already entered will be lost.\nDo you want to continue?",
  "permission": "No permissions|Permission|Permissions",
  "manageThing": "Manage {thing}",
  "organisationMembership": "Organisation membership|Organisation memberships",
  "user": "User|Users",
  "permissions": {
    "READ": "Read",
    "WRITE": "Write",
    "MANAGE": "Manage"
  },
  "permissionDescriptions": {
    "READ": "All content contained in the organisation may be viewed.",
    "WRITE": "Repositories may be created, edited and deleted.",
    "MANAGE": "Full access to all contents and settings of the organisation."
  },
  "revokePermission": "Revoke permission|Revoke permissions",
  "confirmDeleteOrganisationMembership": "Are you sure you want to delete this membership? The user will lose their permissions for this organisation!",
  "add": "Add",
  "editAccount": "Edit account",
  "resultCountWithTotal": "No results|{count} of {total} result|{count} of {total} results",
  "appDescription": "This framework supports the modelling and application of phenotypes. It also enables ontology-based document search.",
  "updatedAt": "Updated at {date}",
  "goToThing": "Go to {thing}",
  "downloadDataSet": "Download whole data set",
  "includePrimaryRepositories": "Include public repositories",
  "includePrimaryRepositoriesDescription": "Check this option to expand the entity search to all entities in public repositories.",
  "forkCouldNotBeCreated": "A fork could not be created because there may already be an up-to-date fork in this repository.",
  "previousQuery": "Previous query|Previous queries",
  "result": "Result",
  "queued": "Queued",
  "notAuthorised": {
    "onlyPrimaryVisible": "You do not have required permissions, so only public repositories are visible to you."
  },
  "boolean": "Boolean",
  "codeInput": {
    "allCodeSystems": "all",
    "importCsvDescription": "Import codes from a CSV file."
  },
  "codeSystem": "Code system|Code systems",
  "unknownCodeSystem": "Unknown code system|Unknown code systems",
  "searchForThing": "Search for {thing}...",
  "addManually": "Add manually",
  "codeSearch": "Code search",
  "manualEntry": "Manual entry",
  "codeSystemUri": "Code system URI",
  "gdprNotice": "{productName} uses technically necessary cookies that are required for basic functionalities and thus enable the operation of the application.",
  "accept": "Accept",
  "learnMore": "Learn more",
  "superEntityIsForkedToo": "The entity {superEntity} will get transferred too.",
  "filterBy": "Filter by",
  "fetchDataFailed": "Could not fetch data from the server.",
  "entitySearchDescription": "Search for entities by entering text and/or using the filter options above.",
  "greeting": "Welcome to the {productName}!",
  "home_": {
    "createModels": {
      "header": "Create a Model|Create Models",
      "content": "Create phenotype definitions in a standardised way and combine them to complex models. Models can be used to run queries or integrate with other software. In addition to phenotypes, you can also create models of concepts to apply them to medical documents."
    },
    "runQuery": {
      "header": "Run a Query|Run Queries",
      "content": "Build queries based on models to search for individuals or medical documents in connected data sources, such as health data stores."
    },
    "content": {
      "header": "This instance has the following content:"
    }
  },
  "model": "Model|Models",
  "navbar": {
    "model": {
      "caption": "Browse and build collaboratively"
    },
    "query": {
      "caption": "Search for individuals and documents"
    }
  },
  "for": "for",
  "queryBuilder": {
    "description": "You first need to select the phenotype model that you want to use and a data source to perform the query on. You can then use the model content to specify the query criteria and output."
  },
  "repositoryContainingModel": "Repository containing the model",
  "confirmClearQuery": "If you switch to another repository, your current query will be lost. Are you sure?",
  "repeatThing": "Repeat {thing}",
  "buildDocQuery": "Start Document Search",
  "single_concept": "Single Concept|Single Concepts",
  "composite_concept": "Composite Concept|Composite Concepts",
  "unnamedConcept": "Unnamed Concept",
  "superConcept": "Super concept|Super concepts",
  "conceptEntity": "Query Concept",
  "conceptEntitySelection": "Select one of the concepts in the left tree by clicking on it.",
  "select": "Select",
  "terminologyImport": {
    "title": "Import from terminology",
    "description": "Please select a code from the terminology server with the form above. The resulting entity will be displayed here."
  },
  "withRestriction": "With restriction|With restrictions",
  "entityImported": "No entities were imported|One entity has been imported|{count} entities have been imported",
  "exportThing": "Export {thing}",
  "configuration": "Configuration|Configurations",
  "executeThing": "Execute {thing}",
  "showDocumentResults": "Show data set",
  "clearDocumentQueryResult": "Clear query results",
  "moveTo": "Move to...",
  "moveThing": "Move {thing}",
  "move": "Move",
  "thingMoved": "{thing} has been moved",
  "movingNotPossible": "Moving is not possible for this content.",
  "content": "Content|Contents",
  "importantNodesOnly": "Important nodes only",
  "yes": "Yes",
  "no": "No",
  "rightClickShowDoc": "Right click to show documentation.",
  "andMore": "and nothing more|and one more|and {n} more",
  "thingAdded": "{thing} has been added",
  "confirmDeleteDataSource": "Do you really want to delete this data source?",
  "thingRemoved": "{thing} has been removed",
  "suitableFor": "Suitable for",
  "manageDataSourceDescription": "Select a data source that you want to make available to this organisation. All users with write permission will be able to query this source.",
  "recordsPerPage": "Records per page:",
  "of": "of",
  "manage": "Manage",
  "edit": "Edit",
  "404Description": "The requested page does not exist.",
  "concept_cluster": "Concept cluster",
  "search_query": "Search query|Search queries",
  "clear": "Clear",
  "documentsOfQuery": "Documents of query",
  "codeMissing": "Code is missing|Codes are missing",
  "codeMissingDescription": "It is recommended to provide at least one code to ensure the reusability of this model.",
  "codeImport": {
    "title": "Code import from CSV",
    "imported": "One Code accepted|{count} codes accepted",
    "fileDescription": "Select a CSV file containing codes. The file should have two or three columns, one for the code system URI, one for the code and optionally one for the scope.",
    "selectCodesToImport": "In the table below, select the codes you wish to transfer from the CSV file. You can modify the table entries as required by clicking on a row.",
    "selectFile": "Select CSV file",
    "hasHeader": "Has header row"
  },
  "codeScope": {
    "title": "Scope",
    "description": "The scope of this code."
  },
  "codeScopes": {
    "self": "Self",
    "leaves": "Leaves",
    "subtree": "Subtree"
  },
  "recordSelected": "No records selected.|One record selected.|{count} records selected.",
  "delimiter": "Delimiter|Delimiters",
  "set": "Set",
  "confirmUnsavedChanges": "There are unsaved changes that will be lost when you leave this page. Proceed anyway?",
  "queryDataSourceIsRequired": "Please specify a data source in order to run this query!",
  "querySubjectIsRequired": "Please provide at least one eligibility criterion or output entry!",
  "emptyQueryOutput": "By default, all phenotypes required to calculate the query result are automatically included in the output. You can specify additional phenotypes to be included here.",
  "frontend": "Frontend|Frontends",
  "backendUnavailable": "The backend server is currently not available. Please try again later.",
  "backend": "Backend|Backends",
  "unavailable": "unavailable",
  "tryAgain": "Try again"
}
